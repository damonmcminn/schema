{"version":3,"sources":["../../es6/validators/string.js"],"names":[],"mappings":";;;;;;;AAAA,IAAM,MAAM,GAAG,CACb,KAAK,EACL,KAAK,EACL,MAAM,CACP,CAAC;;qBAEa,UAAS,MAAM,EAAE,GAAG,EAAE;;AAEnC,MAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;;;;;;;;AAS5B,MAAI,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;;;AACvB,6CACG,CAAC,EAAG,MAAM,CAAC,CAAC,CAAC,iCACR,CAAC,SACP;GACH,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;GAAA,CAAC,CAAC;;AAM1B,SAAO,EAAE,CAAC;CAEX","file":"es6/validators/string.js","sourcesContent":["const fields = [\n  'min',\n  'max',\n  'fake'\n];\n\nexport default function(schema, doc) {\n  \n  let val = doc[schema.field];\n\n  /**\n   * type can be validated in here\n  console.log(val.constructor.name);\n  console.log(schema.type);\n  **/\n\n  // main.js\n  let xs = fields.map(x => {\n    return {\n      [x]: schema[x],\n      name: x\n    };\n  }).filter(x => x[x.name]);\n\n\n\n\n\n  return xs;\n\n}\n"]}