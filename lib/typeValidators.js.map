{"version":3,"sources":["../es6/typeValidators.js"],"names":[],"mappings":";;;;;;;;sBAAoB,eAAe;;IAAvB,EAAE;;qBAEC;;AAEb;AACE,MAAI,EAAE,QAAQ;AACd,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,GAAG,EAAE;AAChB,WAAO,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;GACzB;CACF,EACD;AACE,MAAI,EAAE,QAAQ;AACd,MAAI,EAAE,KAAK;AACX,IAAE,EAAE,YAAS,CAAC,EAAE,GAAG,EAAE;AACnB,WAAO,CAAC,IAAI,GAAG,CAAC;GACjB;CACF,EACD;AACE,MAAI,EAAE,QAAQ;AACd,MAAI,EAAE,KAAK;AACX,IAAE,EAAE,YAAS,CAAC,EAAE,GAAG,EAAE;AACnB,WAAO,CAAC,IAAI,GAAG,CAAC;GACjB;CACF;;AAED;AACE,MAAI,EAAE,QAAQ;AACd,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,GAAG,EAAE;AAChB,WAAO,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;GACzB;CACF;;AAED;AACE,MAAI,EAAE,SAAS;AACf,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,IAAI,EAAE;AACjB,WAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;GACxB;CACF;;AAED;AACE,MAAI,EAAE,QAAQ;AACd,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,KAAK,EAAE;AAClB,WAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;GAC1B;CACF;;AAED;AACE,MAAI,EAAE,MAAM;AACZ,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,IAAI,EAAE;AACjB,WAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;GACxB;CACF;;AAED;AACE,MAAI,EAAE,UAAU;AAChB,MAAI,EAAE,MAAM;AACZ,IAAE;;;;;;;;;;KAAE,UAAS,EAAE,EAAE;AACf,WAAO,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;GAC1B,CAAA;CACF;;AAED;AACE,MAAI,EAAE,QAAQ;AACd,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,GAAG,EAAE;AAChB,WAAO,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;GACzB;CACF;;AAED;AACE,MAAI,EAAE,OAAO;AACb,MAAI,EAAE,MAAM;AACZ,IAAE,EAAE,YAAS,EAAE,EAAE;AACf,WAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;GACvB;CACF,EACD;AACE,MAAI,EAAE,OAAO;AACb,MAAI,EAAE,UAAU;AAChB,IAAE,EAAE,YAAS,EAAE,EAAE,IAAI,EAAE;;AAErB,QAAI,IAAI,KAAK,OAAO,EAAE;AACpB,aAAO,IAAI,CAAC;KACb;;AAED,WAAO,EAAE,CAAC,MAAM,CAAC,UAAA,GAAG;aAAI,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;KAAA,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,CAAC;GACvE;CACF,CACF","file":"es6/typeValidators.js","sourcesContent":["import * as tc from 'js-type-check';\n\nexport default [\n  // NUMBER\n  {\n    type: 'number',\n    name: 'type',\n    fn: function(val) {\n      return tc.isNumber(val);\n    }\n  },\n  {\n    type: 'number',\n    name: 'min',\n    fn: function(x, min) {\n      return x >= min;\n    }\n  },\n  {\n    type: 'number',\n    name: 'max',\n    fn: function(x, max) {\n      return x <= max;\n    }\n  },\n  // STRING\n  {\n    type: 'string',\n    name: 'type',\n    fn: function(str) {\n      return tc.isString(str);\n    }\n  },\n  // BOOLEAN\n  {\n    type: 'boolean',\n    name: 'type',\n    fn: function(bool) {\n      return tc.isBool(bool);\n    }\n  },\n  // REGEXP\n  {\n    type: 'regexp',\n    name: 'type',\n    fn: function(regex) {\n      return tc.isRegex(regex);\n    }\n  },\n  // DATE\n  {\n    type: 'date',\n    name: 'type',\n    fn: function(date) {\n      return tc.isDate(date);\n    }\n  },\n  // FUNCTION\n  {\n    type: 'function',\n    name: 'type',\n    fn: function(fn) {\n      return tc.isFunction(fn);\n    }\n  },\n  // OBJECT\n  {\n    type: 'object',\n    name: 'type',\n    fn: function(obj) {\n      return tc.isObject(obj);\n    }\n  },\n  // ARRAY\n  {\n    type: 'array',\n    name: 'type',\n    fn: function(xs) {\n      return tc.isArray(xs);\n    }\n  },\n  {\n    type: 'array',\n    name: 'elements',\n    fn: function(xs, type) {\n      // if type === [schema...]?\n      if (type === 'mixed') {\n        return true;\n      }\n\n      return xs.filter(val => tc.typeCheck(type, val)).length === xs.length;\n    }\n  }\n];\n"]}